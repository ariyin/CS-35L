2.1


1. Expression for computing the long number 2**(607 - 1) * (2**607 - 1)

(* (expt 2 (- 607 1)) (- (expt 2 607) 1))

141053783706712069063207958086063189881486743514715667838838675999954867742652380114104193329037690251561950568709829327164087724366370087116731268159313652487450652439805877296207297446723295166658228846926807786652870188920867879451478364569313922060370695064736073572378695176473055266826253284886383715072974324463835300053138429460296575143368065570759537328128)

M-: (* (expt 2 (- 607 1)) (- (expt 2 607) 1))

141053783706712069063207958086063189881486743514715667838838675999954867742652380114104193329037690251561950568709829327164087724366370087116731268159313652487450652439805877296207297446723295166658228846926807786652870188920867879451478364569313922060370695064736073572378695176473055266826253284886383715072974324463835300053138429460296575143368065570759537328128(#o177777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,#x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)


2. Expression for determining how many bits are needed to store this number

(+ (logb (* (expt 2 (- 607 1)) (- (expt 2 607) 1))) 1)
1213


3. Type C-h k C-h k and describe what happens and why

C-h k C-h k outputs a description of “C-h k” because C-h k is used to describe a key and its function.


4. Type C-h k M-SPC and describe what happens and why, and how M-SPC works

C-h k M-SPC outputs a description of “M-SPC” because C-h k is used to describe a key and its function. M-SPC removes all but one space. To be more precise, it deletes all spaces and tabs around the point where our cursor is, leaving one space (or N spaces). If N is negative, it deletes newlines as well, leaving -N spaces.


5. What's the general way to do M-SPC / the general function

The general way to do M-SPC would be cycle-spacing, just-one-space






Homework


1. What happens when this script is invoked on an empty file like /dev/null, and why?

IndexError: list index out of range. The script requires a non-empty file as an input to run the function.


2. What happens when this script is invoked with Python 3 rather than Python 2, and why?

SyntaxError: invalid syntax. The code uses syntax specific to Python 2, so the Python 3 compiler is unable to recognize the syntax used. 


3. What happens when your shuf.py script is invoked with Python 2 rather than Python 3, and why?

SyntaxError: invalid syntax. The code uses syntax specific to Python 3, so the Python 2 compiler is unable to recognize the syntax used. 


4. Performance benchmark

/usr/local/cs/bin/python3: 0m0.645s
Coreutils /usr/local/cs/bin/shuf: 0m0.073s

CPU: 
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel
CPU family:          6
Model:               85
Model name:          Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz
Stepping:            4
CPU MHz:             2095.075
BogoMIPS:            4190.15
Hypervisor vendor:   Microsoft
Virtualization type: full
L1d cache:           32K
L1i cache:           32K
L2 cache:            1024K
L3 cache:            16896K
NUMA node0 CPU(s):   0-3

Operating system version: 8.5


5. If your Python implementation runs on /usr/local/cs/bin/python3 but not /usr/bin/python3, do not benchmark it on the latter; instead, briefly explain which features of the newer Python your program relies on, and why.

The program relies on the “match” syntax Python 3.10 provides. /usr/bin/python3 most likely uses a version of Python that predates 3.10, and is therefore unable to provide support for the usage of “match.”